trigger:
- main

pool:
  name: MySelfHostedAgentPool

steps:
- task: DeleteFiles@1
  displayName: 'Clean old builds'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/bin/**, **/obj/**'

- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'

- script: dotnet restore
  displayName: 'Restore NuGet Packages'

- checkout: self
  clean: true

- script: |
    echo "Current Directory: $(Build.SourcesDirectory)"
    ls -R $(Build.SourcesDirectory)
  displayName: 'Debug: Check Directory Structure'

- script: dotnet build $(Build.SourcesDirectory)/StringExtensions.csproj --configuration Release
  displayName: 'Build Solution'

- script: dotnet test --configuration Release
  displayName: 'Run Tests'

- script: dotnet publish $(Build.SourcesDirectory)/StringExtensions.csproj -c Release -o $(Build.ArtifactStagingDirectory)
  displayName: 'Publish Artifacts'

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet Package'
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/StringExtensions.csproj'
    configuration: 'Release'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    nobuild: true

- task: NuGetCommand@2
  displayName: 'Push NuGet Package to Azure Artifacts'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'sshield9/StringExtensionsFeed'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'drop'


